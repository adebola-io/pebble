{
    "Public Declaration": {
        "prefix": "@pub",
        "description": "Creates a new public declaration.",
        "body": "@public $1"
    },
    "Function Declaration": {
        "prefix": "@func",
        "description": "Creates a new function declaration",
        "body": ["@function ${1:name}() {", "   $2", "}"]
    },
    "Record Declaration": {
        "prefix": "@rec",
        "body": [
            "@record ${1:RECORD_NAME} = {",
            "   ${2:property} -> ${3:value}",
            "}"
        ]
    },
    "Constant Declaration": {
        "prefix": "@const",
        "body": "@const $1"
    },
    "Function Declaration with parameters": {
        "prefix": "@funcp",
        "description": "Creates a new function declaration with parameters",
        "body": ["@function ${1:name}(${2:param1}: ${3:type}) {", "   $4", "}"]
    },
    "Use Declaration": {
        "prefix": "@use",
        "description": "Autofills syntax for use imports.",
        "body": ["@use { $2 } from \"$1\";"]
    },
    "Prepend Declaration": {
        "prefix": "@prep",
        "description": "New prepend declaration.",
        "body": ["@prepend \"$1\";"]
    },
    "Interface Declaration": {
        "prefix": "@int",
        "description": "Autofill syntax for interface.",
        "body": [
            "@interface ${1:Name} {",
            "   ${2:trait}: ${3:TraitType};",
            "}"
        ]
    },
    "Module Declaration": {
        "prefix": "@mod",
        "description": "Autofill syntax for modules.",
        "body": ["@module ${1:module_name} {", "   $2", "}"]
    },
    "Implementation": {
        "prefix": "@impl",
        "description": "Implement a interface inside a class.",
        "body": "@implement ${1:Interface},"
    },
    "Class": {
        "prefix": ["@cl", "@class"],
        "description": "Creates a new class.",
        "body": [
            "@class ${1:Name} {",
            "   ${1:Name}() {",
            "      $2",
            "   }",
            "   $3",
            "}"
        ]
    },
    "Enum": {
        "prefix": "@enum",
        "description": "Creates a new enum type.",
        "body": ["@enum ${1:Name} {", "   ${2:Variant}", "}"]
    },
    "Test block": {
        "prefix": "@tests",
        "description": "Creates a new test block.",
        "body": ["@tests {", "   $1", "}"]
    },
    "While Statement": {
        "prefix": "while",
        "body": ["while (${1:condition}) {", "\t$TM_SELECTED_TEXT$0", "}"],
        "description": "While Statement"
    },
    "Try-Recover Statement": {
        "prefix": "tryrec",
        "body": [
            "try {",
            "\t$TM_SELECTED_TEXT$0",
            "} recover (${1:error}) {",
            "\t",
            "}"
        ],
        "description": "Try-Recover Statement"
    },
    "If Statement": {
        "prefix": "if",
        "body": ["if (${1:condition}) {", "\t$TM_SELECTED_TEXT$0", "}"],
        "description": "If Statement"
    },
    "If-Else Statement": {
        "prefix": "ifelse",
        "description": "If-Else Statement",
        "body": [
            "if (${1:condition}) {",
            "\t$TM_SELECTED_TEXT$0",
            "} else {",
            "\t",
            "}"
        ]
    },
    "For Loop": {
        "prefix": "forin",
        "description": "New for Loop.",
        "body": [
            "for (${1:item} in ${2:iterator}) {",
            "   \t$TM_SELECTED_TEXT$0",
            "}"
        ]
    },
    "Println": {
        "prefix": ["pr", "print"],
        "description": "Println statement",
        "body": "println $1;"
    }
}
