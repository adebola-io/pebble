Program {
    range: [
        1,
        1,
        1,
        45,
    ],
    body: Block {
        range: [
            1,
            1,
            1,
            45,
        ],
        statements: [
            ExpressionStatement {
                expression: TernaryExpression {
                    test: BinaryExpression {
                        operator: "==",
                        left: BinaryExpression {
                            operator: "+",
                            left: Number {
                                kind: Decimal,
                                value: "2",
                                raw: "2",
                                range: [
                                    1,
                                    1,
                                    1,
                                    2,
                                ],
                            },
                            right: Number {
                                kind: Decimal,
                                value: "3",
                                raw: "3",
                                range: [
                                    1,
                                    3,
                                    1,
                                    4,
                                ],
                            },
                            range: [
                                1,
                                1,
                                1,
                                4,
                            ],
                        },
                        right: Number {
                            kind: Decimal,
                            value: "5",
                            raw: "5",
                            range: [
                                1,
                                8,
                                1,
                                9,
                            ],
                        },
                        range: [
                            1,
                            1,
                            1,
                            9,
                        ],
                    },
                    consequent: Boolean {
                        value: "true",
                        range: [
                            1,
                            12,
                            1,
                            16,
                        ],
                    },
                    alternate: TernaryExpression {
                        test: BinaryExpression {
                            operator: "==",
                            left: BinaryExpression {
                                operator: "+",
                                left: Number {
                                    kind: Decimal,
                                    value: "5",
                                    raw: "5",
                                    range: [
                                        1,
                                        19,
                                        1,
                                        20,
                                    ],
                                },
                                right: Number {
                                    kind: Decimal,
                                    value: "9",
                                    raw: "9",
                                    range: [
                                        1,
                                        23,
                                        1,
                                        24,
                                    ],
                                },
                                range: [
                                    1,
                                    19,
                                    1,
                                    24,
                                ],
                            },
                            right: Number {
                                kind: Decimal,
                                value: "14",
                                raw: "14",
                                range: [
                                    1,
                                    28,
                                    1,
                                    30,
                                ],
                            },
                            range: [
                                1,
                                19,
                                1,
                                30,
                            ],
                        },
                        consequent: Boolean {
                            value: "true",
                            range: [
                                1,
                                33,
                                1,
                                37,
                            ],
                        },
                        alternate: Boolean {
                            value: "false",
                            range: [
                                1,
                                40,
                                1,
                                45,
                            ],
                        },
                        range: [
                            1,
                            19,
                            1,
                            45,
                        ],
                    },
                    range: [
                        1,
                        1,
                        1,
                        45,
                    ],
                },
                range: [
                    1,
                    1,
                    1,
                    45,
                ],
            },
        ],
    },
}